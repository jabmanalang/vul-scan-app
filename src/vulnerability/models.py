from typing import List, TYPE_CHECKING

from sqlalchemy import ForeignKey
from sqlalchemy.orm import Mapped, mapped_column, relationship

if TYPE_CHECKING:
    from src.asset.models import Asset
    from src.scan.models import Scan
from src.database.session import Base
from src.enums import Severity


class Vulnerability(Base):
    __tablename__ = "vulnerabilities"

    id: Mapped[int] = mapped_column(primary_key=True)
    from_scan: Mapped["Scan"] = relationship("Scan")
    from_scan_id: Mapped[int] = mapped_column(ForeignKey("scans.id"))
    severity: Mapped[Severity]
    name: Mapped[str]
    description: Mapped[str]
    solution: Mapped[str]
    references: Mapped[str]
    cvss_base_score: Mapped[str]
    affected_assets: Mapped[List["Asset"]] = relationship(
        "Asset",
        secondary="vulnerabilities_assets"
    )


class VulnerabilityAsset(Base):
    __tablename__ = "vulnerabilities_assets"

    id: Mapped[int] = mapped_column(primary_key=True)
    vulnerability_id: Mapped[int] = mapped_column(ForeignKey("vulnerabilities.id"), index=True)
    asset_id: Mapped[int] = mapped_column(ForeignKey("assets.id"), index=True)
